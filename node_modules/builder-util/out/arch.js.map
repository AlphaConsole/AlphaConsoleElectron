{"version":3,"file":"arch.js","sourceRoot":"","sources":["../src/arch.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAY,AAEX;AAFD,WAAY,AAAI;AACd,6BAAI;AAAE,4BAAG;AAAE,+BAAM;AAAE,8BAAK,AAC1B;AAAC,GAFW,AAAI,wBAAJ,AAAI,OAEf,AAID,AAAM;2BAA4B,AAAU;AAC1C,AAAM,AAAC,YAAC,AAAI,AAAC,AAAC,AAAC;AACb,aAAK,AAAI,KAAC,AAAG;AACX,AAAM,mBAAC,AAAO;AAChB,aAAK,AAAI,KAAC,AAAI;AACZ,AAAM,mBAAC,AAAM;AACf,aAAK,AAAI,KAAC,AAAM;AACd,AAAM,mBAAC,AAAQ;AACjB,aAAK,AAAI,KAAC,AAAK;AACb,AAAM,mBAAC,AAAO;AAEhB;AACE,kBAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC/C,AAAC,AACH;;AAAC,AAED,AAAM;uBAAwB,AAAU;AACtC,AAAM,WAAC,AAAI,SAAK,AAAI,KAAC,AAAG,AAAC,AAAC,MAAC,AAAE,AAAC,AAAC,AAAC,SAAI,AAAI,KAAC,AAAI,AAAC,KAAE,AAClD;AAAC,AAED,AAAM;wBAAyB,AAAY;AACzC,AAAM,AAAC,YAAC,AAAI,AAAC,AAAC,AAAC;AACb,aAAK,AAAK;AACR,AAAM,mBAAC,AAAI,KAAC,AAAG;AACjB,aAAK,AAAM;AACT,AAAM,mBAAC,AAAI,KAAC,AAAI;AAClB,aAAK,AAAO;AACV,AAAM,mBAAC,AAAI,KAAC,AAAK;AACnB,aAAK,AAAQ;AACX,AAAM,mBAAC,AAAI,KAAC,AAAM;AAEpB;AACE,kBAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC/C,AAAC,AACH;;AAAC","sourcesContent":["export enum Arch {\n  ia32, x64, armv7l, arm64\n}\n\nexport type ArchType = \"x64\" | \"ia32\" | \"armv7l\" | \"arm64\"\n\nexport function toLinuxArchString(arch: Arch): string {\n  switch (arch) {\n    case Arch.x64:\n      return \"amd64\"\n    case Arch.ia32:\n      return \"i386\"\n    case Arch.armv7l:\n      return \"armv7l\"\n    case Arch.arm64:\n      return \"arm64\"\n\n    default:\n      throw new Error(`Unsupported arch ${arch}`)\n  }\n}\n\nexport function getArchSuffix(arch: Arch): string {\n  return arch === Arch.x64 ? \"\" : `-${Arch[arch]}`\n}\n\nexport function archFromString(name: string): Arch {\n  switch (name) {\n    case \"x64\":\n      return Arch.x64\n    case \"ia32\":\n      return Arch.ia32\n    case \"arm64\":\n      return Arch.arm64\n    case \"armv7l\":\n      return Arch.armv7l\n\n    default:\n      throw new Error(`Unsupported arch ${name}`)\n  }\n}"]}
