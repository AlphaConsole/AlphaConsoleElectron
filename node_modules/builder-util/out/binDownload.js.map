{"version":3,"file":"binDownload.js","sourceRoot":"","sources":["../src/binDownload.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,AAAO,AAAE,AAAiB,AAAE,AAAM,AAAQ;;;;AAE1C,MAAM,AAAgB,mBAAG,IAAI,AAAG,AAA2B,AAE3D,AAAM;kBAAmB,AAAW,KAAE,AAAc,QAAE,AAAwB;AAC5E,UAAM,AAAI,OAAG,CAAC,AAAU,YAAE,AAAO,SAAE,AAAG,KAAE,AAAU,YAAE,AAAM,AAAC;AAC3D,AAAE,AAAC,QAAC,AAAQ,YAAI,AAAI,AAAC,MAAC,AAAC;AACrB,AAAI,aAAC,AAAI,KAAC,AAAU,YAAE,AAAQ,AAAC,AACjC;AAAC;AACD,AAAM,WAAC,AAAiB,+CAAC,AAAI,AAAiB,AAChD;AAAC,AAED,AAAM;0BAA2B,AAAY,MAAE,AAAe,SAAE,AAAgB;AAC9E,UAAM,AAAO,AAAG,aAAG,AAAI,QAAI,AAAO,OAAE;AACpC,AAAM,WAAC,AAAM,OAAC,AAAO,AAAE,6FAAoF,AAAO,WAAI,AAAO,OAAK,OAAE,AAAQ,AAAC,AAC/I;AAAC,AAED,AAAM;gBAAiB,AAAY,MAAE,AAAW,KAAE,AAAgB;AAChE,QAAI,AAAO,UAAG,AAAgB,iBAAC,AAAG,IAAC,AAAI,AAAC;AACxC,AAA6C;AAC7C,AAAE,AAAC,QAAC,AAAO,WAAI,AAAI,AAAC,MAAC,AAAC;AACpB,AAAM,eAAC,AAAO,AAChB;AAAC;AAED,AAAO,cAAG,AAAQ,SAAC,AAAI,MAAE,AAAG,KAAE,AAAQ,AAAC;AACvC,AAAgB,qBAAC,AAAG,IAAC,AAAI,MAAE,AAAO,AAAC;AACnC,AAAM,WAAC,AAAO,AAChB;AAAC;AAED,kBAAkB,AAAY,MAAE,AAAW,KAAE,AAAgB;AAC3D,UAAM,AAAI,OAAG,CAAC,AAAmB,qBAAE,AAAO,SAAE,AAAG,KAAE,AAAQ,UAAE,AAAI,AAAC;AAChE,AAAE,AAAC,QAAC,AAAQ,YAAI,AAAI,AAAC,MAAC,AAAC;AACrB,AAAI,aAAC,AAAI,KAAC,AAAU,YAAE,AAAQ,AAAC,AACjC;AAAC;AAED,AAAM,WAAC,AAAiB,+CAAC,AAAI,AAAC,AAChC;AAAC","sourcesContent":["import { executeAppBuilder } from \"./util\"\n\nconst versionToPromise = new Map<string, Promise<string>>()\n\nexport function download(url: string, output: string, checksum?: string | null): Promise<void> {\n  const args = [\"download\", \"--url\", url, \"--output\", output]\n  if (checksum != null) {\n    args.push(\"--sha512\", checksum)\n  }\n  return executeAppBuilder(args) as Promise<any>\n}\n\nexport function getBinFromGithub(name: string, version: string, checksum: string): Promise<string> {\n  const dirName = `${name}-${version}`\n  return getBin(dirName, `https://github.com/electron-userland/electron-builder-binaries/releases/download/${dirName}/${dirName}.7z`, checksum)\n}\n\nexport function getBin(name: string, url: string, checksum: string): Promise<string> {\n  let promise = versionToPromise.get(name)\n  // if rejected, we will try to download again\n  if (promise != null) {\n    return promise\n  }\n\n  promise = doGetBin(name, url, checksum)\n  versionToPromise.set(name, promise)\n  return promise\n}\n\nfunction doGetBin(name: string, url: string, checksum: string): Promise<string> {\n  const args = [\"download-artifact\", \"--url\", url, \"--name\", name]\n  if (checksum != null) {\n    args.push(\"--sha512\", checksum)\n  }\n\n  return executeAppBuilder(args)\n}"]}
