"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.WineVmManager = undefined;

var _builderUtil;

function _load_builderUtil() {
    return _builderUtil = require("builder-util");
}

var _vm;

function _load_vm() {
    return _vm = require("./vm");
}

var _path = _interopRequireWildcard(require("path"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

class WineVmManager extends (_vm || _load_vm()).VmManager {
    constructor() {
        super();
    }
    exec(file, args, options, isLogOutIfDebug = true) {
        return (0, (_builderUtil || _load_builderUtil()).execWine)(file, args, options);
    }
    spawn(file, args, options, extraOptions) {
        throw new Error("Unsupported");
    }
    toVmFile(file) {
        return _path.win32.join("Z:", file);
    }
}
exports.WineVmManager = WineVmManager; //# sourceMappingURL=WineVm.js.map