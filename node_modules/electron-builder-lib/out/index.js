"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.build = exports.buildForge = exports.PlatformPackager = exports.PublishManager = exports.CancellationToken = exports.AppInfo = exports.archFromString = exports.Arch = exports.getArchSuffix = exports.DEFAULT_TARGET = exports.DIR_TARGET = exports.Target = exports.Platform = exports.Packager = undefined;

var _bluebirdLst;

function _load_bluebirdLst() {
    return _bluebirdLst = require("bluebird-lst");
}

let build = exports.build = (() => {
    var _ref = (0, (_bluebirdLst || _load_bluebirdLst()).coroutine)(function* (options, packager = new (_packager || _load_packager()).Packager(options)) {
        // because artifact event maybe dispatched several times for different publish providers
        const artifactPaths = new Set();
        packager.artifactCreated(function (event) {
            if (event.file != null) {
                artifactPaths.add(event.file);
            }
        });
        const publishManager = new (_PublishManager || _load_PublishManager()).PublishManager(packager, options);
        const sigIntHandler = function () {
            (_builderUtil || _load_builderUtil()).log.warn("cancelled by SIGINT");
            packager.cancellationToken.cancel();
            publishManager.cancelTasks();
        };
        process.once("SIGINT", sigIntHandler);
        return yield (0, (_promise || _load_promise()).executeFinally)(packager.build().then(function () {
            return Array.from(artifactPaths);
        }), function (errorOccurred) {
            let promise;
            if (errorOccurred) {
                publishManager.cancelTasks();
                promise = Promise.resolve(null);
            } else {
                promise = publishManager.awaitTasks();
            }
            return promise.then(function () {
                return process.removeListener("SIGINT", sigIntHandler);
            });
        });
    });

    return function build(_x) {
        return _ref.apply(this, arguments);
    };
})();
//# sourceMappingURL=index.js.map


var _packager;

function _load_packager() {
    return _packager = require("./packager");
}

Object.defineProperty(exports, "Packager", {
    enumerable: true,
    get: function () {
        return (_packager || _load_packager()).Packager;
    }
});

var _core;

function _load_core() {
    return _core = require("./core");
}

Object.defineProperty(exports, "Platform", {
    enumerable: true,
    get: function () {
        return (_core || _load_core()).Platform;
    }
});
Object.defineProperty(exports, "Target", {
    enumerable: true,
    get: function () {
        return (_core || _load_core()).Target;
    }
});
Object.defineProperty(exports, "DIR_TARGET", {
    enumerable: true,
    get: function () {
        return (_core || _load_core()).DIR_TARGET;
    }
});
Object.defineProperty(exports, "DEFAULT_TARGET", {
    enumerable: true,
    get: function () {
        return (_core || _load_core()).DEFAULT_TARGET;
    }
});

var _builderUtil;

function _load_builderUtil() {
    return _builderUtil = require("builder-util");
}

Object.defineProperty(exports, "getArchSuffix", {
    enumerable: true,
    get: function () {
        return (_builderUtil || _load_builderUtil()).getArchSuffix;
    }
});
Object.defineProperty(exports, "Arch", {
    enumerable: true,
    get: function () {
        return (_builderUtil || _load_builderUtil()).Arch;
    }
});
Object.defineProperty(exports, "archFromString", {
    enumerable: true,
    get: function () {
        return (_builderUtil || _load_builderUtil()).archFromString;
    }
});

var _appInfo;

function _load_appInfo() {
    return _appInfo = require("./appInfo");
}

Object.defineProperty(exports, "AppInfo", {
    enumerable: true,
    get: function () {
        return (_appInfo || _load_appInfo()).AppInfo;
    }
});

var _builderUtilRuntime;

function _load_builderUtilRuntime() {
    return _builderUtilRuntime = require("builder-util-runtime");
}

Object.defineProperty(exports, "CancellationToken", {
    enumerable: true,
    get: function () {
        return (_builderUtilRuntime || _load_builderUtilRuntime()).CancellationToken;
    }
});

var _PublishManager;

function _load_PublishManager() {
    return _PublishManager = require("./publish/PublishManager");
}

Object.defineProperty(exports, "PublishManager", {
    enumerable: true,
    get: function () {
        return (_PublishManager || _load_PublishManager()).PublishManager;
    }
});

var _platformPackager;

function _load_platformPackager() {
    return _platformPackager = require("./platformPackager");
}

Object.defineProperty(exports, "PlatformPackager", {
    enumerable: true,
    get: function () {
        return (_platformPackager || _load_platformPackager()).PlatformPackager;
    }
});

var _forgeMaker;

function _load_forgeMaker() {
    return _forgeMaker = require("./forge-maker");
}

Object.defineProperty(exports, "buildForge", {
    enumerable: true,
    get: function () {
        return (_forgeMaker || _load_forgeMaker()).buildForge;
    }
});

var _promise;

function _load_promise() {
    return _promise = require("builder-util/out/promise");
}