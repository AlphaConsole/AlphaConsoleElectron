{"version":3,"file":"CancellationToken.js","sourceRoot":"","sources":["../src/CancellationToken.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { EventEmitter } from \"events\"\n\nexport class CancellationToken extends EventEmitter {\n  private parentCancelHandler: (() => any) | null = null\n\n  private _cancelled: boolean\n  get cancelled(): boolean {\n    return this._cancelled || (this._parent != null && this._parent.cancelled)\n  }\n\n  private _parent: CancellationToken | null = null\n  set parent(value: CancellationToken) {\n    this.removeParentCancelHandler()\n\n    this._parent = value\n    this.parentCancelHandler = () => this.cancel()\n    this._parent.onCancel(this.parentCancelHandler)\n  }\n\n  // babel cannot compile ... correctly for super calls\n  constructor(parent?: CancellationToken) {\n    super()\n\n    this._cancelled = false\n    if (parent != null) {\n      this.parent = parent\n    }\n  }\n\n  cancel() {\n    this._cancelled = true\n    this.emit(\"cancel\")\n  }\n\n  private onCancel(handler: () => any) {\n    if (this.cancelled) {\n      handler()\n    }\n    else {\n      this.once(\"cancel\", handler)\n    }\n  }\n\n  createPromise<R>(callback: (resolve: (thenableOrResult?: R) => void, reject: (error: Error) => void, onCancel: (callback: () => void) => void) => void): Promise<R> {\n    if (this.cancelled) {\n      return BluebirdPromise.reject<R>(new CancellationError())\n    }\n\n    let cancelHandler: (() => void) | null = null\n    return new BluebirdPromise<R>((resolve, reject) => {\n      let addedCancelHandler: (() => void) | null = null\n\n      cancelHandler = () => {\n        try {\n          if (addedCancelHandler != null) {\n            addedCancelHandler()\n            addedCancelHandler = null\n          }\n        }\n        finally {\n          reject(new CancellationError())\n        }\n      }\n\n      if (this.cancelled) {\n        cancelHandler()\n        return\n      }\n\n      this.onCancel(cancelHandler)\n\n      callback(resolve, reject, (callback: () => void) => {\n        addedCancelHandler = callback\n      })\n    })\n      .finally(() => {\n        if (cancelHandler != null) {\n          this.removeListener(\"cancel\", cancelHandler)\n          cancelHandler = null\n        }\n      })\n  }\n\n  private removeParentCancelHandler() {\n    const parent = this._parent\n    if (parent != null && this.parentCancelHandler != null) {\n      parent.removeListener(\"cancel\", this.parentCancelHandler)\n      this.parentCancelHandler = null\n    }\n  }\n\n  dispose() {\n    try {\n      this.removeParentCancelHandler()\n    }\n    finally {\n      this.removeAllListeners()\n      this._parent = null\n    }\n  }\n}\n\nexport class CancellationError extends Error {\n  constructor() {\n    super(\"Cancelled\")\n  }\n}"]}
