"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getEffectiveOptions = getEffectiveOptions;

var _builderUtil;

function _load_builderUtil() {
    return _builderUtil = require("builder-util");
}

var _sanitizeFilename;

function _load_sanitizeFilename() {
    return _sanitizeFilename = _interopRequireDefault(require("sanitize-filename"));
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getEffectiveOptions(options, packager) {
    const appInfo = packager.appInfo;
    let menuCategory = null;
    if (options.menuCategory != null && options.menuCategory !== false) {
        if (options.menuCategory === true) {
            const companyName = packager.appInfo.companyName;
            if (companyName == null) {
                throw new (_builderUtil || _load_builderUtil()).InvalidConfigurationError(`Please specify "author" in the application package.json â€” it is required because "menuCategory" is set to true.`);
            }
            menuCategory = (0, (_sanitizeFilename || _load_sanitizeFilename()).default)(companyName);
        } else {
            menuCategory = options.menuCategory.split(/[\/\\]/).map(it => (0, (_sanitizeFilename || _load_sanitizeFilename()).default)(it)).join("\\");
        }
    }
    return {
        isPerMachine: options.perMachine === true,
        isAssisted: options.oneClick === false,
        shortcutName: (0, (_builderUtil || _load_builderUtil()).isEmptyOrSpaces)(options.shortcutName) ? appInfo.productFilename : packager.expandMacro(options.shortcutName),
        isCreateDesktopShortcut: options.createDesktopShortcut !== false,
        isCreateStartMenuShortcut: options.createStartMenuShortcut !== false,
        menuCategory
    };
}
//# sourceMappingURL=CommonWindowsInstallerConfiguration.js.map