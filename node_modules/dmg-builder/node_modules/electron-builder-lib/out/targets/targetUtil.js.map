{"version":3,"file":"targetUtil.js","sourceRoot":"","sources":["../../src/targets/targetUtil.ts"],"names":[],"mappings":";;;;;;;;;;;;;;oEA0BO,AAAK,WAAyB,AAAc,QAAE,AAA+B,UAAE,AAAU;AAC9F,AAAM,eAAC,IAAI,AAAQ,UAAC,MAAM,AAAkB,mBAAC,AAAM,QAAE,AAAQ,UAAE,AAAI,AAAC,AAAC,AACvE;AAAC,AAED,AAAM;;;;;;;;qEAAC,AAAK,WAA6B,AAAc,QAAE,AAA+B,UAAE,AAAU;AAClG,cAAM,AAAO,UAAG,AAAQ,SAAC,AAAI,KAAC,AAAsB,uBAAC,AAAM,QAAE,AAAQ,UAAE,AAAI,AAAC;AAC5E,cAAM,AAAQ,8CAAC,AAAO,AAAC;AACvB,AAAM,eAAC,AAAO,AAChB;AAAC;;;;;;;;;;;AAlCD,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAE,AAAM,AAAY;;;;AAC7C,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAE5B,AAAO,AAAQ,AAAK,AAAE,AAAM,AAAc,AAG1C,AAAM;;;;;;;AACJ,gBAAqB,AAAW;AAAX,aAAG,MAAH,AAAG,AAAQ,AAChC;AAAC;AAED,AAAW,gBAAC,AAAY;AACtB,AAAM,eAAC,AAAI,KAAC,AAAG,MAAG,AAAI,MAAC,AAAG,MAAG,AAAI,AACnC;AAAC;AAED,AAAO;AACL,AAAE,AAAC,YAAC,CAAC,AAAK,4CAAC,AAAO,WAAI,AAAO,QAAC,AAAG,IAAC,AAA2C,gDAAK,AAAM,AAAC,QAAC,AAAC;AACzF,AAAM,mBAAC,AAAM,4CAAC,AAAI,KAAC,AAAG,AAAC,AACzB;AAAC;AACD,AAAM,eAAC,AAAO,QAAC,AAAO,AAAE,AAC1B;AAAC;AAED,AAAQ;AACN,AAAM,eAAC,AAAI,KAAC,AAAG,AACjB;AAAC,AACF,AAED,AAAM","sourcesContent":["import { emptyDir, remove } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Target } from \"../core\"\nimport { Arch, debug } from \"builder-util\"\nimport { PlatformPackager } from \"../platformPackager\"\n\nexport class StageDir {\n  constructor(readonly dir: string) {\n  }\n\n  getTempFile(name: string) {\n    return this.dir + path.sep + name\n  }\n\n  cleanup() {\n    if (!debug.enabled || process.env.ELECTRON_BUILDER_REMOVE_STAGE_EVEN_IF_DEBUG === \"true\") {\n      return remove(this.dir)\n    }\n    return Promise.resolve()\n  }\n\n  toString() {\n    return this.dir\n  }\n}\n\nexport async function createStageDir(target: Target, packager: PlatformPackager<any>, arch: Arch): Promise<StageDir> {\n  return new StageDir(await createStageDirPath(target, packager, arch))\n}\n\nexport async function createStageDirPath(target: Target, packager: PlatformPackager<any>, arch: Arch): Promise<string> {\n  const tempDir = packager.info.stageDirPathCustomizer(target, packager, arch)\n  await emptyDir(tempDir)\n  return tempDir\n}"]}
