{"version":3,"file":"MonoVm.js","sourceRoot":"","sources":["../../src/vm/MonoVm.ts"],"names":[],"mappings":";;;;;;;;;AACA,AAAO,AAAE,AAAI,AAAqB,AAAK,AAAE,AAAM,AAAc;;;;;;AAC7D,AAAO,AAAE,AAAS,AAAE,AAAM,AAAM,AAEhC,AAAM;;;;MAAqB,AAAQ,AAAS;AAC1C;AACE,AAAK,AAAE,AACT;AAAC;AAED,AAAI,SAAC,AAAY,MAAE,AAAmB,MAAE,AAAyB,SAAE,AAAe,kBAAG,AAAI;AACvF,AAAM,eAAC,AAAI,gDAAC,AAAM,QAAE,CAAC,AAAI,AAAC,MAAC,AAAM,OAAC,AAAI,AAAC,yBAClC,AAAO,UACT,AAAe,AAAC,AACrB;AAAC;AAED,AAAK,UAAC,AAAY,MAAE,AAAmB,MAAE,AAAsB,SAAE,AAAgC;AAC/F,AAAM,eAAC,AAAK,iDAAC,AAAM,QAAE,CAAC,AAAI,AAAC,MAAC,AAAM,OAAC,AAAI,AAAC,OAAE,AAAO,SAAE,AAAY,AAAC,AAClE;AAAC,AACF","sourcesContent":["import { SpawnOptions, ExecFileOptions } from \"child_process\"\nimport { exec, ExtraSpawnOptions, spawn } from \"builder-util\"\nimport { VmManager } from \"./vm\"\n\nexport class MonoVmManager extends VmManager {\n  constructor() {\n    super()\n  }\n\n  exec(file: string, args: Array<string>, options?: ExecFileOptions, isLogOutIfDebug = true): Promise<string> {\n    return exec(\"mono\", [file].concat(args), {\n      ...options,\n    }, isLogOutIfDebug)\n  }\n\n  spawn(file: string, args: Array<string>, options?: SpawnOptions, extraOptions?: ExtraSpawnOptions): Promise<any> {\n    return spawn(\"mono\", [file].concat(args), options, extraOptions)\n  }\n}"]}
